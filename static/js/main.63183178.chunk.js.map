{"version":3,"sources":["App.js","index.js"],"names":["Card","props","className","name","description","countdownRenderer","days","hours","minutes","seconds","completed","now","Date","date","getFullYear","renderer","durationRenderer","id","year","getDate","getMonth","tick","console","log","document","getElementById","classList","add","App","onTick","ReactDOM","render","StrictMode"],"mappings":"4NAIA,SAASA,EAAKC,GAQZ,OANA,qBAAKC,UAAU,OAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,6BAAI,4BAAID,EAAME,SACd,4BAAIF,EAAMG,mBAKhB,IAAMC,EAAoB,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UACtDC,EAAM,IAAIC,KACd,OAAIF,EAEK,cAAC,IAAD,CAAWG,KAAM,IAAID,MAAK,IAAIA,MAAOE,cAAe,GAAI,IAAKC,SAAUC,IAGvE,iCAAM,qCAAQL,EAAIG,cAAZ,8BAAsD,uBAA5D,IAAkE,uBAAMG,GAAG,OAAT,UAAiBX,EAAjB,YAAmC,uBAAMW,GAAG,QAAT,cAAmBV,EAAnB,cAAwC,uBAAMU,GAAG,UAAT,UAAoBT,EAApB,gBAA6C,uBAAMS,GAAG,UAAT,UAAoBR,EAApB,mBAG/LO,EAAmB,SAAC,GAAkD,IAAhDV,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UACrDC,EAAM,IAAIC,KACVM,EAAOP,EAAIG,cAEf,OADGH,EAAIQ,UAAY,IAAyB,KAAnBR,EAAIS,aAAmBF,GAAQ,GACpDR,EAEK,cAAC,IAAD,CAAWG,KAAM,IAAID,KAAKM,EAAM,GAAI,GAAIH,SAAUV,IAGlD,iCAAM,qCAAQa,EAAR,8BAAyC,uBAA/C,yBAA0E,uBAAK,uBAAMD,GAAG,OAAT,UAAiBX,EAAjB,YAAmC,uBAAMW,GAAG,QAAT,cAAmBV,EAAnB,cAAwC,uBAAMU,GAAG,UAAT,UAAoBT,EAApB,gBAA6C,uBAAMS,GAAG,UAAT,UAAoBR,EAApB,mBAG5MY,EAAO,SAAC,GAAsC,IAApCf,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,QAEpCa,QAAQC,IAAIjB,GACZgB,QAAQC,IAAIhB,GACZe,QAAQC,IAAIf,GACZc,QAAQC,IAAId,GACZe,SAASC,eAAe,WAAWC,UAAUC,IAAI,YA6BpCC,MA3Bf,WACE,OACE,sBAAK1B,UAAU,MAAf,UACI,qBAAKA,UAAU,sBAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,qBAAKA,UAAU,2BAAf,SACE,cAAC,IAAD,CAAWW,KAAM,IAAID,MAAK,IAAIA,MAAOE,cAAe,GAAI,GAAIC,SAAUV,EAAmBwB,OAAQR,YAK3G,qBAAKnB,UAAU,wBAAf,SACI,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,QAAf,UACE,cAACF,EAAD,CAAMG,KAAK,YAAYC,YAAY,iGACnC,cAACJ,EAAD,CAAMG,KAAK,WAAWC,YAAY,2EAClC,cAACJ,EAAD,CAAMG,KAAK,SAASC,YAAY,iGAChC,cAACJ,EAAD,CAAMG,KAAK,SAASC,YAAY,uIAChC,cAACJ,EAAD,CAAMG,KAAK,SAASC,YAAY,gFAChC,cAACJ,EAAD,CAAMG,KAAK,yBAAyBC,YAAY,sEC5D9D0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFR,SAASC,eAAe,W","file":"static/js/main.63183178.chunk.js","sourcesContent":["import './App.css';\nimport Countdown from 'react-countdown';\nimport React from 'react'\n// Renderer for the countdown to ApoCareypse\nfunction Card(props) {\n  let card = \n  <div className=\"card\">\n    <div className=\"card-container\">\n      <h2><b>{props.name}</b></h2>\n      <p>{props.description}</p>\n    </div>\n  </div>\n  return card\n}\nconst countdownRenderer = ({ days, hours, minutes, seconds, completed }) => {    \n  let now = new Date()\n  if (completed) {\n    // Renders the duration state of the ApoCareypse\n    return <Countdown date={new Date(new Date().getFullYear(), 11, 25)} renderer={durationRenderer}/>;\n  } else {\n    // Render a countdown\n    return <span><b>The {now.getFullYear()} ApoCareypse begins in: </b><br/> <span id='days'>{days} Days,</span><span id='hours'> {hours} Hours, </span><span id='minutes'>{minutes} Minutes, </span><span id='seconds'>{seconds} Seconds.</span></span>;\n  }\n};\nconst durationRenderer = ({ days, hours, minutes, seconds, completed }) => {    \n  let now = new Date()\n  let year = now.getFullYear()\n  if(now.getDate() > 24 && now.getMonth() === 11) year += 1\n  if (completed) {\n    // Render a completed state\n    return <Countdown date={new Date(year, 11, 1)} renderer={countdownRenderer} />;\n  } else {\n    // Render a countdown till the end\n    return <span><b>The {year} ApoCareypse has begun! </b><br/> It will conclude in: <br/><span id='days'>{days} Days,</span><span id='hours'> {hours} Hours, </span><span id='minutes'>{minutes} Minutes, </span><span id='seconds'>{seconds} Seconds.</span></span>;\n  }\n};\nconst tick = ({ days, hours, minutes, seconds}) => {\n  //let now = new Date()\n  console.log(days)\n  console.log(hours)\n  console.log(minutes)\n  console.log(seconds)\n  document.getElementById('seconds').classList.add('seconds')\n}\nfunction App() {\n  return (\n    <div className=\"app\">\n        <div className='countdown-container'>\n          <div className='countdown'>\n            <div className=\"countdown-card\">\n              <div className=\"countdown-card-container\">\n                <Countdown date={new Date(new Date().getFullYear(), 11, 1)} renderer={countdownRenderer} onTick={tick}/>\n              </div>\n            </div>\n          </div>\n        </div>\n      <div className='information-container'>\n          <div className='information'> \n            <div className='cards'>\n              <Card name='Objective' description='Last as long as possible without listening to All I Want For Christmas Is You (Mariah Carey)' />\n              <Card name='Duration' description='The Game begins on the 1st of December, and concludes on December 25. '/>  \n              <Card name='Rule 1' description='Only the original version of the song counts as losing, any remixes or covers are permitted.' />\n              <Card name='Rule 2' description='Attempting to remove others from the game by sending them a link to the song, or playing it near them is allowed, but discouraged.' />\n              <Card name='Losing' description='As soon as you recognize the song playing near you, you have lost the game.' />\n              <Card name='Additional Information' description='This version of the game was adapted from Whamageddon.' />\n            </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}