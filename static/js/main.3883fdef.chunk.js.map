{"version":3,"sources":["App.js","index.js"],"names":["countdownRenderer","days","hours","minutes","seconds","completed","now","Date","date","getFullYear","renderer","durationRenderer","year","getDate","getMonth","App","className","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAKMA,EAAoB,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UACtDC,EAAM,IAAIC,KACd,OAAIF,EAEK,cAAC,IAAD,CAAWG,KAAM,IAAID,MAAK,IAAIA,MAAOE,cAAe,GAAI,IAAKC,SAAUC,IAGvE,wCAAWL,EAAIG,cAAf,2BAAqD,uBAArD,IAA4DR,EAA5D,UAAyEC,EAAzE,WAAwFC,EAAxF,aAA2GC,EAA3G,gBAGLO,EAAmB,SAAC,GAAkD,IAAhDV,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UACrDC,EAAM,IAAIC,KACVK,EAAON,EAAIG,cAEf,OADGH,EAAIO,UAAY,IAAyB,KAAnBP,EAAIQ,aAAmBF,GAAQ,GACpDP,EAEK,cAAC,IAAD,CAAWG,KAAM,IAAID,KAAKK,EAAM,GAAI,GAAIF,SAAUV,IAGlD,wCAAWY,EAAX,2BAAwC,uBAAxC,yBAAmE,uBAAnE,IAA0EX,EAA1E,UAAuFC,EAAvF,WAAsGC,EAAtG,aAAyHC,EAAzH,gBA6BIW,MAzBf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,sBAAKA,UAAU,UAAf,UACE,cAAC,IAAD,CAAWR,KAAM,IAAID,MAAK,IAAIA,MAAOE,cAAe,GAAI,GAAIC,SAAUV,IACtE,+FAC8D,mBAAGiB,KAAK,8CAAR,6CAD9D,kBAEA,uBAFA,qBAGA,+BACE,wGAA0E,uBAA1E,sGAAoL,uBACpL,2CAAa,yCAAb,iFAA4G,uBAC5G,sFAA6D,uBAC7D,qJAA4H,uBAC5H,mGAAqE,yCAArE,+BAAkH,0BARpH,qEAUkE,mBAAGA,KAAK,4CAAR,yBAVlE,iCAWA,uBAXA,+CC9BVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3883fdef.chunk.js","sourcesContent":["import './App.css';\nimport Countdown from 'react-countdown';\n\n\n// Renderer for the countdown to ApoCareypse\nconst countdownRenderer = ({ days, hours, minutes, seconds, completed }) => {    \n  let now = new Date()\n  if (completed) {\n    // Renders the duration state of the ApoCareypse\n    return <Countdown date={new Date(new Date().getFullYear(), 11, 25)} renderer={durationRenderer}/>;\n  } else {\n    // Render a countdown\n    return <span>The {now.getFullYear()} ApoCareypse begins in: <br/> {days} Days, {hours} Hours, {minutes} Minutes, {seconds} Seconds.</span>;\n  }\n};\nconst durationRenderer = ({ days, hours, minutes, seconds, completed }) => {    \n  let now = new Date()\n  let year = now.getFullYear()\n  if(now.getDate() > 24 && now.getMonth() === 11) year += 1\n  if (completed) {\n    // Render a completed state\n    return <Countdown date={new Date(year, 11, 1)} renderer={countdownRenderer} />;\n  } else {\n    // Render a countdown till the end\n    return <span>The {year} ApoCareypse has begun! <br/> It will conclude in: <br/> {days} Days, {hours} Hours, {minutes} Minutes, {seconds} Seconds.</span>;\n  }\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className='Content'>\n          <Countdown date={new Date(new Date().getFullYear(), 11, 1)} renderer={countdownRenderer} />\n          <p>\n          Your Objective: Last as long as possible without listening to <a href='https://www.youtube.com/watch?v=aAkMkVFwAoo'>All I Want For Christmas Is You</a> (Mariah Carey)\n          <br/>Rules of the Game:\n          <ol>\n            <li>The Game begins on the 1st of December, and concludes on December 25. <br/>If you are unable to locate a timekeeping device, the countdown above may be of some use to you.</li><br/>\n            <li>Only the <b>Original</b> version of the song counts as losing, any remixes or covers are permitted.</li><br/>\n            <li>You lose the game as soon as you recognize the song.</li><br/>\n            <li>Attempting to get others out of the game by sending them the link to the song and having them play it is permitted.</li><br/>\n            <li>Playing the song near others to remove them from the game in the <b>physical</b> world should be avoided.</li><br/>\n          </ol>\n          Additional Information: This version of the game was adapted from <a href='https://en.wikipedia.org/wiki/Whamageddon'>Whamageddon</a>, and neither game is my idea.\n          <br/>(This page is a work in progress)\n          </p>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}